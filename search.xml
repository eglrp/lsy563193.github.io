<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2Flinux-config.1%2F</url>
    <content type="text"><![CDATA[安装ssl安装 gitsudo apt-get install gitgit config –global user.email “you@example.com“git config –global user.name “Your Name” 安装 Node.jswget -qO- https://raw.github.com/creationix/nvm/master/install.sh | shecho “export NVM_DIR=”$HOME/.nvm”” &gt;&gt; ~/.zshrcsource ~/.zshrc[ -s “$NVM_DIR/nvm.sh” ] &amp;&amp; . “$NVM_DIR/nvm.sh”nvm install stable 安装 Hexonpm install -g hexo-clinpm install hexo –save tmuxsudo apt-get install tmux -y 设置shell为zshrcsudo apt-get install zsh -ychsh -s /bin/zsh 安装oh my zshwget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh 切换caps to ctrlecho “setxkbmap -layout us -option ctrl:nocaps” &gt;&gt; ~/.zshrcsource ~/.zshrc 模糊搜索神器fzfgit clone –depth 1 https://github.com/junegunn/fzf.git ~/.fzf~/.fzf/installsource ~/.zshrc autojumpgit clone git://github.com/joelthelion/autojump.git ~/.autojump~cd ~/.autojump~./install.py[[ -s /home/syue/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; source /home/syue/.autojump/etc/profile.d/autojump.shautoload -U compinit &amp;&amp; compinit -u install rossudo sh -c ‘echo “deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main” &gt; /etc/apt/sources.list.d/ros-latest.list’sudo apt-key adv –keyserver hkp://ha.pool.sks-keyservers.net:80 –recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116sudo apt-get updatesudo apt-get install ros-kinetic-desktop-fullapt-cache search ros-kineticsudo rosdep initrosdep updateecho “source /opt/ros/kinetic/setup.zsh” &gt;&gt; ~/.zshrcsource ~/.zshrcsource /opt/ros/kinetic/setup.zsh]]></content>
  </entry>
  <entry>
    <title><![CDATA[cartographer源码解析]]></title>
    <url>%2Fcartographer-notes%2F</url>
    <content type="text"></content>
      <categories>
        <category>cartographer</category>
      </categories>
      <tags>
        <tag>slam 激光 cartographer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安装docker的的ros]]></title>
    <url>%2Fros-docker%2F</url>
    <content type="text"><![CDATA[Real-Time Loop Closure in 2D LIDAR SLAMAbstract 摘要LIDAR SLAM是获取平面地图的有效方法。 构建便携式捕获平台需要在有限的计算资源下操作。 我们介绍了我们的背包绘图平台中使用的方法，该平台实现了5厘米分辨率的实时构图和闭环。 为了实现实时闭环，我们使用branch-and-bound将扫描到Submap匹配计算为约束。 I. INTRODUCTION 简介本文的贡献是一种新的方法，用于降低计算激光数据的闭环约束的需求量。 II. RELATED WORK 相关工作Scan-to-scan matching经常用于激光SLAM中计算相对姿态变化，例如[1] - [4]。 它的缺点是很快就会累积误差。 Scan-to-map matching有助于限制误差的累积。使用Gauss-Newton在线性插值地图上找到局部最优的一种方法是[5]。在存在良好的位姿初始估计的情况下，在这种情况下通过使用足够高的数据速率LIDAR提供，局部优化的Scan-to-map matching是有效且稳健的。在不稳定的平台上，使用惯性测量单元（IMU）将激光投影到水平面上以估计重力方向。 pixel-accurate scan matching方法，如[1]，进一步减少了局部误差累积。虽然计算上更昂贵，但这种方法对于闭环检测很有用。 一些方法着重于通过匹配激光扫描的提取特征来改善计算成本[4]。其他用于闭环检测方法包括基于直方图的匹配[6]，扫描数据中的特征检测，以及使用机器学习[7]。 解决累积局部误差的两种常用方法是粒子滤波器和基于图形的SLAM [2]，[8]。 基于图形的方法适用于表示位姿和特征的节点集合。 图中的边是由观察产生的约束。 可以使用各种优化方法来最小化由所有约束引入的误差，例如， [11]，[12]。在[13]中描述了这种用于室外SLAM的系统，其使用基于图的方法，局部scan-to-scan匹配，以及基于Submap特征的直方图的重叠局部图的匹配。 III. SYSTEM OVERVIEW 系统概述Cartographer可实时室内绘图，生成分辨率为5cm的2D网格地图。 Laser scans被插入到最优估算位姿的Submap中，假定在短时间内足够准确。 而Scan match发生在最近的Submap上，因此它只取决于最近的扫描，全局误差会累积。 cartographer 定期运行位姿优化来减少误差积累。当一个Submap完成时，就不会再将新的扫描插入其中，它将参与Scan match以获得闭环。所有已完成的Submap和扫描都会自动考虑进行闭环。如果它们基于当前的位姿估计足够接近，则Scan match器试图在Submap中找到扫描。如果在当前估计位姿的搜索窗口中找到足够好的匹配，则将其作为闭环约束添加到优化问题。 通过每隔几秒完成一次优化，我们的经验就是当重新访问位置时立即闭环。这导致了软实时约束，即闭环Scan match必须比添加新扫描更快，否则它会明显落后,闭环失败。我们通过对每个完成的Submap使用branch-and-bound和几个预先计算的网格来实现这一点。 IV. LOCAL 2D SLAM 局部2d slam我们的系统将单独的局部和全局方法结合到2D SLAM中。两种方法都优化了由LIDAR观测的（x，y）平移和旋转ξθ组成的姿态ξ=（ξx，ξy，ξθ），其进一步被称为扫描。在不平的地面上，IMU用于估计重力方向，将扫描从水平安装的LIDAR投影到2D世界。在我们的局部方法中，每个连续扫描与Submap相匹配，使用非线性优化将扫描与Submap对齐; 该过程称为real time Scan match,其随着时间累积误差，我们的全局方法将其去除，如第五节所述。 A. ScansSubmap构造是重复对齐scan和Submap坐标帧的迭代过程。随着扫描的原点在$0 \in \Bbb R^2$，我们现在将关于扫描点的信息写为$H = \lbrace h_k\rbrace _{k=1,…,K}, h_k \in \Bbb R^2$。Submap帧中扫描帧的姿态$\xi$表示为变换$T_\xi$，它将扫描点从扫描帧严格转换为Submap帧，定义为 $$T_\xi =\underbrace{\left( \begin {matrix} cos\xi_\delta &amp; -sin\xi_\delta \ sin\xi_\delta &amp; sin\xi_\delta \end{matrix}\right)}_{R_\xi}p +\underbrace{\left(\begin {matrix} \xi_x \ \xi_y\end{matrix} \right)}_{t_\xi}.\tag1$$ B. Submaps一些连续扫描用于构建Submap。这些Submap采用概率网格的形式$M : \gamma \Bbb Z × \gamma \Bbb Z \rightarrow [p_{min}, p_{max}]$，它以给定分辨率r的离散网格点进行映射，例如5厘米，到值。这些值可以被认为是网格点被阻挡的概率。对于每个网格点，我们将相应的像素定义为最接近该网格点的所有点。每当要将扫描插入概率网格时，计算用于命中的一组网格点和用于未命中的不相交组。对于每次击中，我们将最近的网格点插入到命中集中。对于每个未命中，我们插入与每个像素相关联的网格点，该网格点与扫描原点和每个扫描点之间的一条光线相交，不包括已经在命中集中的网格点。如果每个以前未观察到的网格点位于其中一个集合中，则会为其分配概率$p_{hit}$ 或 $p_{miss}$。如果已经观察到网格点x，我们更新命中和未命中的几率$$odds(p) = \frac{p}{1-p}, \tag1$$$$M_{new}(x) = clamp(odds^{-1}(odds(M_{old}(x))\cdot odds(p_{hit}))) \tag1$$ and equivalently for misses 等同于未命中 C. Ceres scan matching在将扫描插入Submap之前，扫描位姿ξ相对于当前局部Submap进行优化（使用Ceresbased [14]Scan match器）。 扫描匹配器负责在Submap中的扫描点处找到最大概率的扫描位姿。 我们将其视为非线性最小二乘问题 $$ \underset {\xi}{argmin} \sum_{k=1}^K(1-M_(smooth(T_\xi h_k)))^2$$ 其中$T\xi$根据扫描位姿将$h_k$从scan帧变换到Submap帧。函数$M_{smooth} : \Bbb R^2 → \Bbb R$是局部Submap中概率值的平滑版本。我们使用双三次插值。结果，可以发生区间$[0, 1]$之外的值，但是被认为是无关紧要的。这种平滑函数的数学优化通常比网格的分辨率提供更好的精度。由于这是局部优化，因此需要良好的初始估计。能够测量角速度的IMU可用于估计Scan match之间的位置的旋转分量$\theta$。虽然计算密集程度更高，但可以在没有IMU的情况下使用更高频率的Scan match或像素精确扫描匹配方法。 V. CLOSING LOOPS 闭环由于扫描仅与包含少量最近扫描的Submap匹配，因此上述方法会慢慢累积误差。对于仅几十次连续扫描，累积误差很小。通过创建许多小Submap来处理更大的空间。我们的方法，优化所有扫描和Submap的位姿，遵循稀疏位姿调整[2]。插入扫描的相对位姿存储在内存中，以用于闭环优化。除了这些相对位姿之外，一旦Submap不再发生变化，所有其他由scan和Submap组成的对都被认为是闭环。global scan matcher在后台运行，如果找到良好匹配，则会将相应的相对位姿添加到优化问题中 A. Optimization problem闭环优化，和Scan match一样，也被称为非线性最小二乘问题，它允许轻松添加残差以考虑其他数据。每隔几秒钟，我们使用Ceres [14]来计算解决方案 $$\underset{\Xi^m,\Xi^n}{argmin} \frac{1}{2}\sum_{ij}\rho(E^2(\xi _i^m,\xi j^s;\sigma{ij},\xi_{ij}))\tag{SPA}$$ 在给定一些约束的情况下，Submap构成$\Xi^m = \lbrace\xi_i^m\rbrace_{i=1,…,m}$和世界中的扫描构成$\Xi^s = \lbrace\xi_j^s\rbrace_{j=1,…,n}$被优化。这些约束采用相对位姿$\xi_{ij}$和相关协方差矩阵$\Sigma_ij$的形式。对于一对Submapi和扫描j，位姿ξij描述了Submap坐标系中Scan match的位置。协方差矩阵Σij可以被评估，例如，遵循[15]中的方法，或者局部地使用Ceres [14]与（CS）的协方差估计特征。这种约束的残差E由下式计算 $$E^2(\xi_i^m, \xi_j^s;\Sigma_{ij},\xi_{ij}) = e(\xi_i^m,\xi_j^s;\xi_{ij})^T\Sigma_{ij}^{-1}e(\xi_i^m,\xi_j^s;\xi_{ij}),\tag4$$$$e(\xi_i^m,\xi_j^s;\xi_{ij}) = \xi_{ij} -\left( \begin{matrix} R_{\xi_i^m}^{-1}(t_{\xi_i^m}-t_{\xi_j^s}) \ \xi_{ij} - \xi_{j;\theta}^s \end{matrix}\right).\tag5$$ 损失函数$\rho$，例如Huber loss，用于减少当Scan match为优化问题添加不正确约束时可能出现在（SPA）中的异常值的影响。例如，这可能发生在局部对称环境中，例如办公室隔间。异常值的替代方法包括[16]。 B. Branch-and-bound scan match我们对最佳的像素精确匹配感兴趣$$\xi^* = \underset{\xi\in\omega}{argmax}\sum_{k=1}^kM_{nearest}(T_\xi h_k)),\tag{BBS}$$ 其中$\omega$是搜索窗口，$M_{nearest}$是M扩展到所有$\Bbb R^2$，首先将其参数四舍五入到最近的网格点，即将网格点的值扩展为相应的像素。使用（CS）可以进一步提高匹配的质量。 通过仔细选择步长来提高效率。我们选择角度步长$\xi_\theta$，以便最大范围$d_{max}$的扫描点移动不超过$r$，即一个像素的宽度。我们推导出使用余弦定律 $$d_{max} = \underset{k=1,…,K}{max} |h_k|,\tag6 \$$$$\xi_\theta = arccos(1-\frac{r^2}{2d_max^2})\tag7$$ 我们计算了包含给定线性和角度搜索窗口大小的整数步骤，例如$W_x=W_y=7m$和$W_\theta=30\degree$$$w_x = \lceil\frac{W_x}{r}\rceil,\ w_y = \lceil\frac{W_y}{r}\rceil,\ w_\theta = \lceil\frac{W_\theta}{\xi_\theta}\rceil.\tag8$$ 这导致一个有限的集$W$形成一个围绕估计$\xi_\theta$放置在其中心的搜索窗口，$$\overline{W} = {-w_x,…,w_x} \times {-w_y,…,w_y} \times {-w_\theta,…,w_\theta}\tag9$$$$W = {\xi_0 + (rj_x, rj_y, \xi_\theta j_\theta):(j_x,j_y,j_\theta) \in \overline{W}}\tag{10}$$ 找到$\xi^*$的朴素算法很容易制定，参见算法1，但对于搜索窗口大小，我们考虑到它会太慢。 相反，我们使用branch-and-bound在较大的搜索窗口上有效地计算$\xi^*$。有关通用方法，请参见算法2。 这种方法最初是在混合整数线性程序的背景下提出的[17]。关于这个主题的文献很广泛; 见[18]简短概述。主要思想是将可能性子集表示为树中的节点，其中根节点表示所有可能的解决方案，在我们的示例中为$W$。每个节点的子节点形成其父节点的分区，因此它们一起表示同一组可能性。叶节点是单体; 每个代表一个可行的解决方案。请注意，算法是准确的。只要内部节点c的得分（c）是其元素得分的上限，它就提供与朴素方法相同的解决方案。在这种情况下，每当节点有界时，在该子树中不存在比目前最熟知的解决方案更好的解决方案。 为了得到具体的算法，我们必须决定节点选择，分支和上界计算的方法。 1) Node selection:1）节点选择： 在没有更好的替代方案的情况下，我们的算法使用深度优先搜索（DFS）作为默认选择：算法的效率取决于被修剪的树的大部分。这取决于两件事：良好的上限和良好的当前解决方案。后一部分由DFS帮助，它可以快速评估许多叶节点。由于我们不希望将不良匹配作为闭环约束添加，我们还引入了一个分数阈值，低于该分数阈值我们对最优解决方案不感兴趣。由于实际上不会经常超过阈值，这降低了节点选择或找到初始启发式解决方案的重要性。关于在DFS期间访问孩子的顺序，我们计算每个孩子的分数的上限，访问具有最大边界的最有希望的子节点。算法3是这种方法。 2) Branching rule:2）分支规则： 树中的每个节点由整数元组$c=（c_x，c_y，c_θ，c_h）\in\Bbb Z^4$描述。高度为ch的节点最多可合并$2^{ch}\times2^{ch}$可能的翻译，但代表一个特定的轮换： $$\overline {\overline{W}} = ({j_x,j_y} \in \Bbb{Z}^2:\ \left. \begin{array}{l} c_x \leq j_x &lt; c_x + 2^{ch}\ c_x \leq j_x &lt; c_x + 2^{ch} \end{array} \right} \times {c_\theta},\tag11$$ $$\overline{W}_c = \overline{\overline{W}} \cap \overline{W}\tag{12}$$ 叶节点具有高度$c_h=0$，并且对应于可行解$W\ni\xi_c=\xi_0 +（rc_x，rc_y，\xi_\theta c_\theta）$。 在我们的算法3的公式中，包含所有可行解的根节点没有明确地出现并且分支到一组初始节点$C_0$，在固定高度$h_0$覆盖搜索窗口 $$\overline{W}_{0,x} = { -w_x + 2^{h_o}:j_x \in \Bbb Z, 0 \leq 2^{h_o} \leq 2w_x } \\overline{W}_{0,x} = { -w_x + 2^{h_o}:j_x \in \Bbb Z, 0 \leq 2^{h_o} \leq 2w_x } \\overline{W}_{0,x} = { -w_x + 2^{h_o}:j_x \in \Bbb Z, 0 \leq 2^{h_o} \leq 2w_x } \C_0 = \overline{W}{0,x} \times \overline{W}{0,y} \times \overline{W}_{0,\theta} \times {h_0} \tag{13}$$ At a given node c with $c_h &gt; 1$, we branch into up to four children of height $c_h − 1$在$c_h&gt;1$的给定节点c，我们分支最多四个子高度$c_h − 1$ $$C_c = (({c_x,c_x + 2^{c_h-1}} \times {c_y, c_y + 2^{c_h-1} \times c_\theta}) \cap \overline{W}) \times {c_h-1}\tag{14}$$ 3) Computing upper bounds:The remaining part of the branch and bound approach is an efficient way to compute upper bounds at inner nodes, both in terms of computational effort and in the quality of the bound.We use3）计算上界： 分支和边界方法的剩余部分是计算内部节点上限的有效方式，包括计算工作量和边界质量。我们用 $$score(c) = \sum_{k=1}^{K}\underset{j\in \overline{\overline{W_c}}}{max}M{nearest}(T\xi_jh_k) \\geq\sum_{k=1}^{K}\underset{j\in \overline{W_c}}{max}M_{nearest}(T\xi_{j}h_{k})\\underset{j\in \overline{W_c}}{max}\sum_{k=1}^{K}maxM_{nearest}(T\xi_{j}h_{k})\tag{15}$$ 为了能够有效地计算最大值，我们使用预先计算的网格$M_{precomp}^{ch}$。每个可能的高度$c_h$预先计算一个网格允许我们用扫描点数的effor linear计算得分。请注意，为了能够执行此操作，我们还计算了超过$\overline{\overline{W_c}}$的最大值，该值可能大于我们搜索空间边界附近的$\overline{W_c}$。 $$score(c) = \sum_{k=1}^{K}M_{precomp}^{ch}(T\xi_{c}h_{k})\tag{16}$$$$M_{precomp}^{ch}(x,y) = \underset {\begin{matrix} x^, \in [x,x+r(2^h-1)] \ y^, \in [y,y+r(2^h-1)] \end{matrix}} {max}M_{nearest}(x^, , y^,) \tag{17}$$ 与叶节点一样使用$\xi_c$。请注意，Mhprecomp与$M_{nearest}$具有相同的像素结构，但在每个像素中存储从那里开始的$2^h\times 2^h$像素值的最大值。图3给出了这种预先计算的网格的一个例子。 为了使构建预先计算的网格的计算工作量保持在较低水平，我们要等到概率网格不再接收更新。然后我们计算一组预先计算的网格，并开始匹配它。 对于每个预先计算的网格，我们计算从每个像素开始的$2^h$像素宽行的最大值。使用该中间结果，然后构造下一个预先计算的网格。 如果按照添加顺序删除值，则可以按摊销$O（1）$保持更改值集合的最大值。连续最大值保存在一个双端队列中，可以递归地定义为包含当前在集合中的所有值的最大值，然后是在第一次出现最大值之后所有值的连续最大值列表。对于空的值集合，此列表为空。使用此方法，可以在$O（n）$中计算预先计算的网格，其中n是每个预先计算的网格中的像素数。 计算上限的另一种方法是计算较低分辨率的概率网格，连续减半分辨率，见[1]。由于我们的方法的额外内存消耗是可接受的，我们更喜欢使用较低分辨率的概率网格，这导致比（15）更差的界限，从而对性能产生负面影响。 REFERENCES 参考[1] E. Olson，M3RSM：多对多分辨率Scan match，载于IEEE国际机器人与自动化会议论文集（ICRA），2015年6月。 [2] K. Konolige，G。Grisetti，R。Kummerle，W。Burgard，B。Limketkai，¨和R. Vincent，稀疏位姿调整2D绘图，在IROS，台湾台北，2010年10月10日。 [3] F. Lu和E. Milios，用于环境绘图的全局一致范围扫描对准，自主机器人，第一卷。 4，不。 4，pp.333- 349,1997。 [4]F.Mart’ın，R。Triebel，L。Moreno和R. Siegwart，两种不同的三维构图工具：基于DE的Scan match和基于特征的环路检测，Robotica，vol。 32，不。 01，pp.19-41,2014。 [5] S. Kohlbrecher，J。Meyer，O。von Stryk和U. Klingauf，具有完整3D运动估计的灵活且可扩展的SLAM系统，Proc。 IEEE国际安全，安全和救援机器人研讨会（SSRR）。 IEEE，2011年11月。 [6] M. Himstedt，J。Frost，S。Hellbach，H.-J。 Bohme和E. Maehle，使用几何地标关系的2D LIDAR扫描中的大规模地点识别，智能机器人和系统（IROS 2014），2014年IEEE / RSJ国际会议。 IEEE，2014，pp.5030-5035。 [7] K. Granstrom，T。B.Sch¨on，J.I。Nieto和F. T. Ramos，学习close闭合范围数据循环，国际机器人研究杂志，第一卷。 30，不。 14，pp.1728-1754,2011。 [8] G. Grisetti，C。Stachniss和W. Burgard，通过自适应提议和选择性重采样改进基于网格的SLAM与Rao-Blackwellized粒子滤波器，机器人与自动化，2005年.ICRA 2005. 2005年会议记录IEEE国际会议。 IEEE，2005，pp.2432-2437。 [9] G. D. Tipaldi，M。Braun和K. O. Arras，FLIRT：2D范围数据的兴趣区域，应用于机器人导航，在实验机器人中。 Springer，2014年，第695-710页。]]></content>
      <categories>
        <category>ros</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>ros</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[build-my-robot]]></title>
    <url>%2Fbuild-my-robot%2F</url>
    <content type="text"></content>
      <categories>
        <category>一步一步构建自己的机器人</category>
      </categories>
      <tags>
        <tag>ros robot</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开机安装]]></title>
    <url>%2Flinux-config%2F</url>
    <content type="text"><![CDATA[安装ssl安装 gitsudo apt-get install gitgit config –global user.email “you@example.com“git config –global user.name “Your Name” 安装 Node.jswget -qO- https://raw.github.com/creationix/nvm/master/install.sh | shexport NVM_DIR=”$HOME/.nvm”[ -s “$NVM_DIR/nvm.sh” ] &amp;&amp; . “$NVM_DIR/nvm.sh”nvm install stable 安装 Hexonpm install -g hexo-clinpm install hexo –save tmuxsudo apt-get install tmux -y 设置shell为zshrcsudo apt-get install zsh -ychsh -s /bin/zsh 安装oh my zshwget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh 切换caps to ctrlecho “setxkbmap -layout us -option ctrl:nocaps” &gt;&gt; ~/.zshrcsource ~/.zshrc 模糊搜索神器fzfgit clone –depth 1 https://github.com/junegunn/fzf.git ~/.fzf~/.fzf/installsource ~/.zshrc autojumpgit clone git://github.com/joelthelion/autojump.git ~/.autojump~cd ~/.autojump~./install.py[[ -s /home/syue/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; source /home/syue/.autojump/etc/profile.d/autojump.shautoload -U compinit &amp;&amp; compinit -u install rossudo sh -c ‘echo “deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main” &gt; /etc/apt/sources.list.d/ros-latest.list’sudo apt-key adv –keyserver hkp://ha.pool.sks-keyservers.net:80 –recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116sudo apt-get updatesudo apt-get install ros-kinetic-desktop-fullapt-cache search ros-kineticsudo rosdep initrosdep updateecho “source /opt/ros/kinetic/setup.zsh” &gt;&gt; ~/.zshrcsource ~/.zshrcsource /opt/ros/kinetic/setup.zsh]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[吴恩达《深度学习》系列课程个人笔记]]></title>
    <url>%2FAndrew-Ng-Deep-Learning-notes%2F</url>
    <content type="text"><![CDATA[k aa]]></content>
      <categories>
        <category>深度学习笔记</category>
      </categories>
      <tags>
        <tag>Testing</tag>
        <tag>Another Tag</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Algorithms-notes]]></title>
    <url>%2FAlgorithms-notes%2F</url>
    <content type="text"></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>algo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[静脉曲张的原理和治疗方法]]></title>
    <url>%2FVaricose-veins%2F</url>
    <content type="text"><![CDATA[概述静脉曲张形成的主要原因是由于先天性血管壁膜比较薄弱或长时间维持相同姿势很少改变，血液蓄积下肢，在日积月累的情况下破坏静脉瓣膜而产生静脉压过高，使血管突出皮肤表面的症状。 改善方法物理治疗: 弹力袜1.1 弹力袜促进血液回流: 为什么有用?: 弹力袜在腿上的压力不一样，利用这种压力梯度可以促进血液回流。 注意： 但不是所有的人都适合穿弹力袜，静脉曲张较严重的患者穿弹力袜之前最好咨询医生。 1.2 按摩加速血液循环:在腿部感到疲劳时，或者平时方便的时候对腿部进行简单的揉捏，加速血液循环。 注意：坚持下来，静脉曲张就可以得到有效的改善.至于按摩可以改善血液循环的原理其实并不是很有科学依据，知乎上还是能找到一些,但是找不到靠谱的解释，本人实践过，确实是没有什么改善,不过也有可能是按摩手法的不对。网上找了能够促进血液循环的按摩方法.静脉曲张按摩手法 运动加强静脉管壁从血液动力学的角度进行观察，健康的人在运动时，由于瓣膜的功能正常，肌肉的规律性收缩使得深部静脉血液回流加速，皮下静脉的压力甚至可能比静止时还低。所以进行适当的跑步锻炼，不但不会引起下肢静脉曲张，恰恰相反，跑步可以使腿部肌肉活动增强，挤压静脉内的血液，使其流动更加顺畅，还有助于预防和改善下肢静脉曲张。对于静脉曲张的患者来说，当然也可以进行如慢跑、游泳、单车、跳绳等运动。但是因为静脉瓣膜功能受损，应当避免像举重、快速冲刺短跑、跳远、投掷等引起腹压增高的活动。 注意:但是严重的静脉曲张患者，不要一下子运动过量，否则容易对心血管造成伤害。 食疗 多食用蔬菜、水果、豆类等纤维素含量较高的食物，适量食用瘦牛肉、鸡肉等，多吃含维E的食物，如洋白菜、菠菜、橙子等可以疏通经络，改善血液循环，减轻腿部的沉重感。 1、在静脉曲张的饮食中新鲜蔬菜和水果不能少：新鲜蔬菜和水果含有大量的维生素及矿物质，可以改善组织的氧化作用，增加血液循环，提高机体免疫力。如新鲜水果中含有大量维生素 C ，可以通过降低血凝倾向，改善血液循环，促进康复，预防淤伤。新鲜蔬菜含有丰富纤维素，能避免便秘，保持肠道清洁，改善肛周围的血液循环，预防末梢静脉曲张和痔疮的形成。 2、要有足够的蛋白质：静脉曲张的饮食中要多含蛋白质丰富的食物，如鱼、牛、羊肉等，大豆以及豆制品也含有丰富的植物蛋白，也应多吃。充足的蛋白质可以维持体内所有营养物质的平衡，增强免疫力，保护细胞，还可以乳化脂肪，促进血液循环。 3、含维生素 E 丰富的食物：静脉曲张的饮食要多含维生素E的食物，可以改善血液循环，减轻腿部的沉重感。含维生素 E 丰富的食物有：洋白菜、菠菜、甘蓝、麦芽、坚果类、大豆、全麦、粗粮、蛋等都是静脉曲张的饮食注意事项。 如何预防预防的扎6招防小腿静脉曲张 睡前抬腿久站抬脚尖 1. 睡前抬腿 2. 久站抬脚尖静脉曲张的成因是静脉瓣膜功能不良，静脉血液向下逆流而形成静脉曲张。因此，站立时，要每隔一段时间就抬脚尖，让肌肉收缩，给静脉血液加压，让血液往心脏方向流动，致使静脉瓣膜打开维持正常功能。一般来说，小腿感到酸麻时，就是在提醒你要抬脚尖了。 3. 穿平跟鞋平跟鞋有助于预防静脉曲张，在体育锻炼时一定要穿有海绵垫的运动鞋或旅游鞋，对缓解腿部压力，预防静脉曲张很有帮助。 4. 赤足在条件允许的情况下，下班回家后，将鞋脱掉，赤足或穿拖鞋行走，可以改善足部血液循环，并使足部肌肉得到锻炼。 5. 抬高下肢站立工作者在工间休息时，宜将鞋脱掉，双脚抬高，足部要高于心脏30厘米以上，下班回到家中后也应将双脚抬高15分钟，缓解血液对下肢的压力。 6. 改掉不良如厕习惯在上厕所时看书报，这是很不好的生活习惯。上厕所时看书报，蹲踞时间长会给下肢静脉增加过多的负担，造成血管内滞血，因此这种习惯一定要改掉。 装备:1. 弹力袜子使用 起床穿。 睡觉不穿。 半年换。最好三个月，看物料和生活习惯。因为弹性会不断下降，没弹性等于没压力，所以穿鬆了就要换。 手洗＋不晒太阳＋摊乾＋不用化学清洗剂(柔顺／漂白)可以让弹性保持久一点，这个就看自己勤不勤快了。 最重要的一点，运动。简单说就是让下肢肌肉更好的泵血，更好的把血从下肢输送回心脏，另外也可以避免和减少长期穿压力袜后依赖和股肉无力的情况。 选择型号 根据穿者的腿部症状选择合适的静脉曲张袜压力。静脉曲张袜分为以下几级压力：一级低压预防保健型(15-25mmHg)：适用于静脉曲张、血栓高发人群的保健预防;一级中压初期治疗型(25-30mmHg)：适用于静脉曲张初期患者;二级高压中度治疗型(30-40mmHg)：适用于下肢已经有明显的静脉曲张(站立时静脉血管凸出皮肤表面)，并伴有腿部不适感的患者(如下肢酸乏肿胀、湿疹瘙痒、抽筋发麻、色素沉着等)、静脉炎、怀孕期间严重静脉曲张、静脉曲张手术后(大小隐静脉剥脱术)患者、深静脉血栓形成后综合症患者;三级高压重度治疗型(40-50mmHg)：适用于下肢高度肿胀、溃疡、皮肤变黑变硬、高度淋巴水肿、整形抽脂术后恢复期等患者。 根据病变部位选择静脉曲张袜的长度。中统袜(膝下)、长统袜(及大腿)、连裤袜(及腰部)。如果穿者只是膝盖以下的部位患有静脉曲张，穿中统静脉曲张袜即可;如果穿者膝盖以上的部位也有症状、需要穿长统的或者连裤型静脉曲张袜。 确定合适的号型(静脉曲张袜分为小号S、中号M、大号L、加大号XL)。量出穿者腿部的三个主要尺寸(厘米)：脚踝(脚脖子最细处)周长、小腿肚最大周长及大腿最大周长，以确定合适的号码，购买连裤袜要根据穿者的身高体重选择号码。 注意: 如何判断自己的静脉曲张严重程度国际上，静脉曲张按照程度不同共分为0-6期： c1: 表层血管像蚯蚓一样曲张，明显凸出皮肤，曲张呈团状或结节状，有毛细血管扩张、网状静脉、踝部潮红。c2: 在站立时腿部可见弯曲增粗的表浅静脉血管，高出皮肤，在腿部抬高或平卧后可消失，常有小腿酸胀、易疲劳等不适感觉，此期是治疗的较好时期。c3: 曲张血管增多，小腿开始出现水肿，以站立过久或劳累后较明显，晨起时水肿可消退。患肢常比对侧腿增粗，有些人还出现皮肤瘙痒，严重者呈现湿疹、瘀积性皮炎等皮肤病变。c4: 血管内血液瘀积过多，静脉压力明显增高，使一部分血液成分渗透至血管外的皮肤及皮下组织，造成局部皮肤发红，变紫，直至发黑(血中铁元素沉积)，并且失去弹性而变硬。c5: 已发展为急性溃疡期，发黑变硬的皮肤在外力作用下发生破溃，采用普通方法已很难康复，严重影响工作与生活。c6: 静脉曲张晚期，或未经正确治疗的静脉性溃疡反复发作，形成臁疮腿，常见于踝关节附近及小腿下段，俗称“老烂腿”。 一级压力裤: c1 二级压力裤: c2-c4 三级压力裤: c4*c6 去哪里买 国内压力袜是属于医疗器械，不是哪都可以卖的，如果不是正规的地方卖的，大概率不是真的 上外国网站自己买，因为国内压力袜是属于医疗器械，如果有代购或是什麽海淘，如果不是正规的医疗器械卖家，性质像偷卖外国药一样。 排行版]]></content>
      <categories>
        <category>健康</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Closed balcony]]></title>
    <url>%2FClosed-balcony%2F</url>
    <content type="text"><![CDATA[概述一般封闭烟台由三部分构成 框窗:建议安装有框 气密窗，最好是经过抗压性、气密性（刮风的时候不会有灰尘钻进来）和水密性（下雨的时候不会有水流到室内）检验的。 注意： 气密性能: 120等级、30等级、8等级、2等级影响因素: 窗户框扇的搭接处、气密防水胶条和毛刷条长度、内扇窗的气密橡胶条与内扇下支长度，毛刷条的完整性，玻璃压条与玻璃长度 玻璃 钢化玻璃隔音保温表现更好的双层中空玻璃 防护栏 框窗框窗类型有很多，铝合金门窗、实木窗、铝木复合窗、玻璃钢门窗、不锈钢门窗、无框窗 塑钢门窗优点是隔音、隔热防火保温，气密性、水密、防腐都不错，而且价格便宜。缺点是它的断面较大，比起铝合金窗来说采光性略差。 铝合金门窗优点: 硬度高，不易刮伤，耐磨耐候，表面光滑，耐污性佳便于清洁。而且价格便宜。缺点: 是导热性强，保温性差。 断桥铝合金优点: 结合上面两种缺点: 最贵 -玻璃门窗（也叫无框窗）优点:采光性良好、空气流通好、美观易折叠等。缺点:保温性差，密封性差，隔音一般。 价格塑钢窗的价格塑钢窗主材价格:每种品牌的塑钢窗主材价格不同,如海螺型材现在的价格是10500元/吨,每吨的出窗率要看窗的型号,88推拉窗估计能出95-100平米,80的推拉窗能出100-105平米,60平开窗能出70-75平米左右,按面积计算,也就是88的型材成本价格为110-105元,80的型材成本价格为105-100元,60的型材成本合到150-140元。 塑钢窗五金配件价格:推拉窗要用到的滑轮和月牙锁,这两个加起来的价格为8元/平米,还有就是密封毛条和减震胶条,加起来价格为10元/平米,再就是制作和安装要30元/平米,另外运输要4元/平米。 塑钢窗加强钢价格:主材里要有加强钢,市场价格是4000左右/吨,如果用的是1.2的话要成本20元左右,低于这个标准的1.0以下的可能有12元左右就可以了。 塑钢窗玻璃价格:市场上的玻璃有浮法、格法、平板等几种,浮法的5毫米的玻璃价格30元,格法的24元,平板的19元。如果用中空玻璃的话,除了加一层玻璃的钱还要用到铝合金的框架和干燥外围的中空胶,这些的成本价格是10-15元。 塑钢窗密封处理价格:主要是打泡沫胶和密封胶,价格要看窗台的平整情况,好的窗台有5元/米就可以,旧的窗台由于拆旧窗的破坏会用到12元/米左右。 88推拉窗 110 型材+五金8+配件10+制作安装30+20加强钢+玻璃30+运输4=212元/平米。 80推拉窗 105型材+五金8+配件10+制作安装30+20加强钢+玻璃30+运输4=207元/平米。 60平开窗 150型材+五38+配件10+制作安装30+20加强钢+玻璃30+运输4=284元/平米。 铝合金窗的价格铝合金普通推拉窗的价格在250元/平方米左右,采用1.2mm厚标准铝型材,单片5mm玻璃;铝合金隔音隔热窗750元/平方米左右,采用1.4厚铝型材,中空玻璃。 铝合金窗主材价格差别很大,铝材的价格主要差别在铝材的质量上,有厚薄优劣之分,一般氧化铝材160元/平米,电泳铝材200元/平方左右,彩色铝材260元/平米以上。铝型材质有50系列、55系列、60系列、70系列等,其中50系列的铝材价格在400元/平米左右,而70系列铝材价格可达到700元/平米,不同系列的铝材质厚度不一样,铝材越厚的窗户价格越高。 以上是塑钢窗和铝合金窗的价格介绍,塑钢窗因为用得比较多,大家对它的价格很熟悉。铝合金窗低档的没人愿意用,宁可用塑钢窗代替,高档铝合金窗价格又很高,常用于施工要求较高的建筑或高档建筑。]]></content>
      <categories>
        <category>家庭装修</category>
      </categories>
      <tags>
        <tag>阳台</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python笔记]]></title>
    <url>%2Fpython-notes%2F</url>
    <content type="text"></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在vscode jupyter模式下工作]]></title>
    <url>%2Fwork-in-vscode-with-jupyter%2F</url>
    <content type="text"><![CDATA[概述使用jupyter notebook工作时候不习惯，自己还是喜欢在vscode纯vim的工作模式。于是下载了vscode jupyter的插件，但是这是来写pyd代码的。我的目的最终是生成md文档，记录我学习的过程。于是我下载了一个py2md.py的工具。做了些修改，用于把py生成md文件。 1234567891011#! /usr/bin/env pythonimport sysimport itertoolsfor markdown, lines in itertools.groupby(open(sys.argv[1]).readlines(), key=lambda line: line.startswith('# ')): if markdown: print(''.join(line[2:] for line in lines)) else: print('\n```python') print(''.join(lines).strip()) print('```\n') 写的过程中需要注意的几点: 文档直接用＃ 隔开，并且不要留有空格# # 文档直接用＃ 隔开，并且不要留有空格 标题上下用# ， 看起来更清晰## ####我是标题# python文档的代码用＃％％是表示执行cell的#%%python文档的代码用＃％％是表示执行cell的 输出结果用不带空格的#表示#输出 使用vscode 的tasks可以快速的执行python命令添加任务的做法可见vscode 文档 更新vscode 下安装的插件 github]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>vscode</tag>
        <tag>jupyter</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[notes-python]]></title>
    <url>%2Fnotes-python%2F</url>
    <content type="text"><![CDATA[概述中文 Python 笔记这是个学习python的好资料,用神器jupyter写的。而我的目的是jupyter来阅读不如用docsify阅读来的方便， 幸运的是作者已经写了个脚本，用这个脚本可以快速的转换,所以我做了写修改，直接生成md文件。 下载 1git clone https://github.com/lijin-THU/notes-python.git 生成md文件 1python generate_static_files.py 提交到note-python的docs的docs文件,并设为个人博客的子目录 个人博客创建 notes-python文档 ab abc 你好吗这是一个我很好 概述 你好吗 这是一个 我很好]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一些神奇的工具使用笔记]]></title>
    <url>%2Fyoutube-dl%2F</url>
    <content type="text"><![CDATA[youtube-dl概述这是一个可以下载youtube视频和字幕的神奇工具，我主要用于下载字幕.使用这个的前提是你得翻墙。 安装1pip install --upgrade youtube-dl 常用命令youtube-dl有很多参数，我就不一一介绍。运行youtube -h可以查看所有命令,这里列出我用到的一些命令: 注意:由于众所周知的原因，使用之前需要下载proxychains,1sudo apt-get install proxychains 安装proxychains,需要修改/etc/proxychains配置最后一行12# socks4 127.0.0.1 9050socks5 127.0.0.1 1080 1080是你翻墙的端口 1proxychains youtube-dl --write-sub --sub-lang en --skip-download -o "%(playlist_index)s-%(title)s.%(ext)s" "https://www.youtube.com/watch?v=2S4nn7S8Hk4&amp;list=PLAwxTw4SYaPnbDacyrK_kB_RUkuxQBlCm" 选项的解释 –write-sub: 写到字幕文件 –sub-lang: 下载语言 –skip-download: 不下载视频 -o “%(playlist_index)s-%(title)s.%(ext)s” : 使用编号加标题 notedownnotedown主要是用来实现md to ipynb，这样我就可以直接一边写博客一边调试代码。使用方法如下: 安装: 1pip install https://github.com/aaren/notedown/tarball/master 打开文件: 1sudo gedit ~/.jupyter/jupyter_notebook_config.py ` 增加以下内容，存盘 c.NotebookApp.contents_manager_class = ‘notedown.NotedownContentsManager’ 重启jupyter notebook 服务]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>youtube-dl</tag>
        <tag>proxychains</tag>
        <tag>notedown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机视觉入门]]></title>
    <url>%2FIntroduction-to-Computer-Vision%2F</url>
    <content type="text"></content>
      <categories>
        <category>计算机视觉</category>
      </categories>
      <tags>
        <tag>udacity</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[打造Hexo个人博客中遇到的坑]]></title>
    <url>%2Fhexo-note%2F</url>
    <content type="text"><![CDATA[经历了几天的努力，终于解决了几个重大问题，打造出自己理想的博客个人网站。主要是参照大黄菌的个人博客,但是她没有公布使用如何使用hexo跳转到docsify的步骤。现在把我这几天填过的坑记下来。 首先说下我的需求: hexo作博客,next作主题. 可以自动跳转到docsify文档的界面. 使用个人域名 hexo作博客,next作主题hexo作博客使用hexo构建博客主要是参照hexo的官方文档.以下是构建的步骤: 开始使用 概述: 安装: post_asset_folder: true 注意: npm 必须使用sudo 建站: npm install这条指令有什么用 package.json 的文档内容现在有不明白有什么用 scaffolds: 默认post,draft是草稿模板，page是页面模板，当你使用tag,category的时候用到，后面会讲到 source: _文件隐藏，Markdown,html解析，其他拷贝过去。如拷贝CNAME themes:主题，next就是拷贝到这里的 配置: 网站: title ,就是浏览器标签栏的名字，subtitle 网页显示的Hexo首页的地方. 注意：必须hexo serve重启才能生效 网址: 网站存放在子目录,目前不用 目录: 目前不用 文章: titlecase指的是将每个单词首字母转换成大写,post_asset_folder: true 分类 &amp; 标签: 不用到 日期 / 时间格式: 不用到 分页 不用到: 扩展: theme: ,现在不用，但是后面改为next要回来改 deploy 最好现在就布置，自动发布到github,之前没有看到这个选项，手动发布. 注意: 这是我的设置type: gitrepo: git@github.com:lsy563193/lsy563193.github.io.gitbranch: master 指令: init, new, generate, deploy, publish ,server 注意:hexo g -d, hexo d -g 通常用,一样的hexo serve 也是可以简写为hexo s的，不用加路径，常用 迁移 基本操作 写作 Front-matter开启了 comments 评论功能 预先定义的参数 分类和标签 注意:categories: Diary Life会使分类Life成为Diary的子分类 标签插件在markdown 中添加太多的hexo 标签，其实会在以后用其他编辑器预览，查看，迁移时留下诸多不变，毕竟，私有的语法意味着不兼容 资源文件夹资源（Asset）代表 source 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。 数据文件 服务器 生成器 部署自定义 永久链接 可以自动跳转到docsify文档的界面实现的方式是使用域名覆盖。以链接到吴恩达《深度学习》系列课程笔记,为例,网址为http://lsy563193/github.io/Andrew-Ng-Deep-Learning-notes/ ,我们只要让page的网址也为这个，这样在点击的时候就自动替换为 Andrew-Ng-Deep-Learning-notes的内容实现的步骤如下: 克隆:克隆Andrew-Ng-Deep-Learning-notes到你的github目录， 设置为github.io的doc目录: 把这个项目设置为你博客下的目录 把hexo生成的地址也设置为这个: 首先创建Andrew-Ng-Deep-Learning-notes的博文 1hexo new Andrew-Ng-Deep-Learning-notes 设置category,比如为深度学习笔记,效果如下 设置_config.yml的permalink: :title/: 这样两者的地址就一样的 Hexo-Next-主题优化参考 浏览页面的时候显示当前浏览进度_config.yml scrollpercent 开启版权声明主题配置文件下,搜索关键字post_copyright,enable改为true 主题]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
